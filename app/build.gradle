plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-parcelize'
  id 'kotlin-kapt'
  id 'dagger.hilt.android.plugin'
  id 'androidx.navigation.safeargs.kotlin'
}

android {
  compileSdk rootProject.compileSdkVersion

  defaultConfig {
    applicationId "com.example.gourmetapp"
    minSdk rootProject.minSdkVersion
    targetSdk rootProject.targetedSdkVersion
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildFeatures {
    viewBinding true
  }

  kotlinOptions {
    jvmTarget = '1.8'
    freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
  }
}

dependencies {

  implementation "androidx.core:core-ktx:$ktxVersion"
  implementation "androidx.appcompat:appcompat:$appCompatVersion"
  implementation "com.google.android.material:material:$materialVersion"
  implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"
  testImplementation "junit:junit:$junitVersion"
  androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

  // Lifecycle + ViewModel & LiveData
  implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion")
  implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion")
  implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion")
  implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion")

  // Coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

  // Fragment
  implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

  // Room
  implementation "androidx.room:room-runtime:$roomVersion"
  kapt "androidx.room:room-compiler:$roomVersion"
  implementation "androidx.room:room-ktx:$roomVersion"

  // Navigation Component
  implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
  implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

  // Dagger Hilt
  implementation "com.google.dagger:hilt-android:$hiltVersion"
  kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
  kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

  //Retrofit with Moshi Converter
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$retrofitMoshiConverterVersion"

  // Moshi
  implementation("com.squareup.moshi:moshi-kotlin:$moshiVersion")
  implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

  // Interceptor
  implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

  //Timber
  implementation "com.jakewharton.timber:timber:$timberVersion"

  // Glide
  implementation "com.github.bumptech.glide:glide:$glideVersion"
  annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

  //SwpieRefresh
  implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeVersion"
}